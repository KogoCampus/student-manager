serverless:
  Resources:
    PasswordResetFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: lambda/passwordReset.handler
        Runtime: nodejs20.x
        CodeUri: .
        Environment:
          Variables:
            REDIS_ENDPOINT: redis-cluster.example.com
            REDIS_PORT: "6379"
            COGNITO_USER_POOL_ID: us-west-2_Onci94rlj
            COGNITO_CLIENT_ID: your-cognito-client-id
        Events:
          PasswordResetApi:
            Type: Api
            Properties:
              Path: /student/password-reset
              Method: post

openapi:
  paths:
    /student/password-reset:
      post:
        summary: Reset password for a student
        description: Resets the password for a student after email verification code validation.
        requestBody:
          description: The new password for the student
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  newPassword:
                    type: string
                    description: The new password for the student.
        parameters:
          - name: email
            in: query
            required: true
            description: The email address of the student.
            schema:
              type: string
          - name: verificationCode
            in: query
            required: true
            description: The verification code sent to the student's email.
            schema:
              type: string
        responses:
          '200':
            description: Password reset successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Password reset successfully"
          '400':
            description: Bad request - missing or invalid parameters
          '404':
            description: Not found - user does not exist
          '500':
            description: Internal server error